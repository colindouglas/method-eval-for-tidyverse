[
["ep17-detection-capabilities.html", "Chapter 3 EP17 - Detection Capabilities 3.1 Appendix A", " Chapter 3 EP17 - Detection Capabilities Evaluation of Detection Capability for Clinical Laboratory Measurement Procedures This work is based on EP17-A2, June 2012. Simple, elegant code with minimal duplication that can be adapted for other uses. 3.1 Appendix A Evaluation of Limits of Blank and Detection by the Classical Approach 3.1.1 Table A1 Observed Blank Sample Results for Reagent Lot 1 (Units are pg/mL) # Table A1. Observed Blank Sample Results for Reagent Lot 1 (Units are pg/mL) table_a1 &lt;- tibble( day = rep(1:3, each = 4), replicate = rep(1:4, times = 3), `Blank 1` = c( 2.6, -0.8, 5.5, 6.0, 4.5, 0.6, -2.3, 3.4, 5.9, 7.6, 4.1, -1.4), `Blank 2` = c( 1.0, 2.9, 4.9, 8.0, 6.9, 5.0, 3.4, 1.2, 6.5, 5.6, -2.2, 2.3), `Blank 3` = c(-4.4, -3.4, 7.0, 6.9, 4.3, 3.2, -1.4, -4.2, 5.9, 7.6, 3.8, 5.8), `Blank 4` = c( 1.5, -1.9, 5.1, 5.7, 4.1, 4.5, -0.6, 0.5, 5.4, 7.6, 4.4, 6.6), `Blank 5` = c( 1.2, -0.7, 6.1, 5.1, 4.8, 3.3, -2.8, -1.4, 8.7, 3.6, 5.1, 3.5) ) 3.1.2 Table A2 Observed Low Level Sample Results for Reagent Lot 1 (Units are pg/mL) # Table A2. Observed Low Level Sample Results for Reagent Lot 1 (Units are pg/mL) table_a2 &lt;- tibble( day = rep(1:3, each = 4), replicate = rep(1:4, times = 3), `Low 1` = c(21.0, 22.8, 28.2, 25.9, 26.4, 28.3, 20.7, 21.9, 24.7, 22.5, 28.5, 29.2), `Low 2` = c(13.3, 12.6, 18.2, 14.7, 17.8, 14.0, 14.1, 12.5, 11.3, 12.2, 16.2, 13.9), `Low 3` = c(12.8, 12.9, 17.4, 16.0, 15.9, 14.1, 11.3, 9.4, 10.6, 13.6, 17.6, 14.9), `Low 4` = c(17.3, 19.2, 21.5, 22.2, 24.1, 25.8, 16.0, 16.4, 24.9, 23.8, 22.1, 26.1), `Low 5` = c(19.2, 22.7, 28.3, 26.2, 25.1, 30.3, 23.4, 19.2, 26.3, 23.1, 27.5, 30.1) ) 3.1.3 Table A3 Observed Blank Sample Results for Reagent Lot 2 (Units are pg/mL) # Table A3. Observed Blank Sample Results for Reagent Lot 2 (Units are pg/mL) table_a3 &lt;- tibble( day = rep(1:3, each = 4), replicate = rep(1:4, times = 3), `Blank 1` = c(4.6, 4.1, 1.6, 3.7, 2.2, 0.7, 4.6, 2.6, 1.1, -4.4, 0.9, 0.7), `Blank 2` = c(9.2, 8.3, 4.8, 5.4, 4.8, 6.3, 5.4, 9.6, 7.7, 3.1, 6.1, 10.0), `Blank 3` = c(6.1, 3.2, 3.9, 1.4, 3.1, 4.1, 1.0, 3.4, 0.1, 0.4, 2.9, -1.6), `Blank 4` = c(4.0, 11.5, 4.5, 3.6, 4.4, 6.8, 7.1, 4.2, 3.7, 3.7, 5.3, 4.5), `Blank 5` = c(4.0, 6.2, -0.2, 2.3, 1.6, 2.6, 6.4, 5.7, 4.2, 3.7, 1.4, 1.5) ) 3.1.4 Table A4 Observed Low Level Sample Results for Reagent Lot 2 (Units are pg/mL) # Table A4. Observed Low Level Sample Results for Reagent Lot 2 (Units are pg/mL) table_a4 &lt;- tibble( day = rep(1:3, each = 4), replicate = rep(1:4, times = 3), `Low 1` = c(22.0, 22.5, 21.8, 22.1, 20.3, 21.0, 25.3, 26.0, 27.2, 25.1, 25.3, 25.3), `Low 2` = c(15.6, 21.2, 14.8, 14.9, 16.0, 15.8, 21.6, 22.8, 15.3, 18.7, 18.3, 19.5), `Low 3` = c(13.0, 15.9, 9.0, 7.0, 13.4, 8.5, 16.3, 18.1, 12.4, 11.1, 11.3, 10.1), `Low 4` = c(18.8, 17.6, 14.1, 14.9, 19.2, 15.8, 19.8, 21.4, 18.0, 18.0, 19.6, 23.1), `Low 5` = c(32.9, 30.4, 29.4, 27.6, 27.7, 30.6, 31.4, 30.4, 32.5, 28.9, 29.8, 35.1) ) 3.1.5 Tidy Table Cleanup Before we move on, we can make our job significantly easier going forward by reorganizing our tables into a tidy, rowwise format. # Add the reagent lots, pivot to a longer format, and convert non-value columns to factors tables_a14 &lt;- map2_dfr(.x = list(table_a1, table_a2, table_a3, table_a4), # The tables we need to clean up .y = list(&quot;Lot 1&quot;, &quot;Lot 1&quot;, &quot;Lot 2&quot;, &quot;Lot 2&quot;), # The lots of reagent that map to each of the tables .f = ~ mutate(.x, reagent_lot = .y) %&gt;% pivot_longer(cols = starts_with(c(&quot;Blank&quot;, &quot;Low&quot;)), names_to = &quot;sample&quot;, values_to = &quot;value&quot;)) %&gt;% separate(sample, into = c(&quot;sample_type&quot;, &quot;sample_number&quot;), sep = &quot; &quot;, remove = FALSE) %&gt;% mutate_at(vars(-value), as.factor) glimpse(tables_a14) ## Rows: 240 ## Columns: 7 ## $ day &lt;fct&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,... ## $ replicate &lt;fct&gt; 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4,... ## $ reagent_lot &lt;fct&gt; Lot 1, Lot 1, Lot 1, Lot 1, Lot 1, Lot 1, Lot 1, Lot ... ## $ sample &lt;fct&gt; Blank 1, Blank 2, Blank 3, Blank 4, Blank 5, Blank 1,... ## $ sample_type &lt;fct&gt; Blank, Blank, Blank, Blank, Blank, Blank, Blank, Blan... ## $ sample_number &lt;fct&gt; 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3,... ## $ value &lt;dbl&gt; 2.6, 1.0, -4.4, 1.5, 1.2, -0.8, 2.9, -3.4, -1.9, -0.7... 3.1.6 Table A5 Rank Positions and LoB from Blank Sample Test Results alpha &lt;- 0.05 # Type I error risk pct_B &lt;- 1 - alpha B &lt;- nlevels(tables_a14$day) * # Number of days nlevels(tables_a14$sample_number) * # Number of unique samples nlevels(tables_a14$replicate) # Number of replicates rank_position &lt;- 0.5 + (B * pct_B) # Reproduce table A5 tables_a14 %&gt;% group_by(reagent_lot, sample_type) %&gt;% mutate(rank_position = rank(value, ties.method = &quot;random&quot;)) %&gt;% filter(sample_type == &quot;Blank&quot;, rank_position %in% 56:60) %&gt;% ungroup() %&gt;% arrange(sample_type, reagent_lot, rank_position) %&gt;% select(rank_position, reagent_lot, value) %&gt;% pivot_wider(names_from = reagent_lot, values_from = value) ## # A tibble: 5 x 3 ## rank_position `Lot 1` `Lot 2` ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 56 7.6 8.3 ## 2 57 7.6 9.2 ## 3 58 7.6 9.6 ## 4 59 8 10 ## 5 60 8.7 11.5 # Type 2 quantiles provide averaging at discontinuities limits_nonparametric &lt;- tables_a14 %&gt;% group_by(reagent_lot, sample_type) %&gt;% filter(sample_type == &quot;Blank&quot;) %&gt;% summarize(LoB = quantile(value, 1 - alpha, type = 2), .groups = &quot;drop&quot;) # Confirm we&#39;ve reproduced the values in the text stopifnot( near( limits_nonparametric$LoB, c(7.6, 9.4) )) limits_nonparametric ## # A tibble: 2 x 3 ## reagent_lot sample_type LoB ## &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; ## 1 Lot 1 Blank 7.6 ## 2 Lot 2 Blank 9.40 3.1.7 Table A6 SDs and LoD Calcuations From Low Level Sample Test Results z &lt;- qnorm(1-alpha) # 95th percentile of normal distribution #z &lt;- round(z, digits = 3) # Degrees of freedom, total measurements less the number of unique samples df &lt;- B - nlevels(tables_a14$sample_number) # &quot;Multiplier factor&quot; as per eqn. 6 c_p = z / (1 - ( 1 / (4 * df))) table_a6 &lt;- tables_a14 %&gt;% filter(sample_type == &quot;Low&quot;) %&gt;% group_by(sample, reagent_lot) %&gt;% summarize(n = n(), SD = sd(value), .groups = &quot;drop&quot;) %&gt;% arrange(reagent_lot) table_a6 ## # A tibble: 10 x 4 ## sample reagent_lot n SD ## &lt;fct&gt; &lt;fct&gt; &lt;int&gt; &lt;dbl&gt; ## 1 Low 1 Lot 1 12 3.15 ## 2 Low 2 Lot 1 12 2.17 ## 3 Low 3 Lot 1 12 2.62 ## 4 Low 4 Lot 1 12 3.61 ## 5 Low 5 Lot 1 12 3.73 ## 6 Low 1 Lot 2 12 2.27 ## 7 Low 2 Lot 2 12 2.87 ## 8 Low 3 Lot 2 12 3.37 ## 9 Low 4 Lot 2 12 2.59 ## 10 Low 5 Lot 2 12 2.18 limits_nonparametric &lt;- table_a6 %&gt;% group_by(reagent_lot) %&gt;% summarize(SD_L = sqrt(sum((n - 1) * SD^2) / sum(n-1)), .groups = &quot;drop&quot;) %&gt;% left_join(limits_nonparametric, by = &quot;reagent_lot&quot;) %&gt;% mutate(LoD = round(LoB + c_p * SD_L, 1)) ## I believe there to be an error in this table - CD, 16-July-2020 stopifnot( near( limits_nonparametric$LoD, c(12.7, 13.8) # Values according to my math # c(14.5, 13.8) # Values according to document )) limits_nonparametric ## # A tibble: 2 x 5 ## reagent_lot SD_L sample_type LoB LoD ## &lt;fct&gt; &lt;dbl&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Lot 1 3.11 Blank 7.6 12.7 ## 2 Lot 2 2.69 Blank 9.40 13.8 3.1.8 Figure A1 Histogram of Combined Blank Sample Measurements tables_a14 %&gt;% filter(sample_type == &quot;Blank&quot;) %&gt;% ggplot(aes(x = value)) + geom_histogram(binwidth = 0.5, color = &quot;black&quot;, fill = &quot;lightgrey&quot;, boundary = 0.5, closed = &quot;left&quot;) + # Match the binning-style that CLSI uses scale_x_continuous(breaks = seq(from = -6, to = 12, by = 2), limits = c(-6, 12), name = &quot;&quot;) + scale_y_continuous(breaks = seq(2, 10, by = 2), name = &quot;Count&quot;) shapiro.test(tables_a14 %&gt;% filter(sample_type == &quot;Blank&quot;) %&gt;% pull(value) ) ## ## Shapiro-Wilk normality test ## ## data: tables_a14 %&gt;% filter(sample_type == &quot;Blank&quot;) %&gt;% pull(value) ## W = 0.98071, p-value = 0.08299 3.1.9 Table A7 LoB Calculations Using Parametric Data Analysis Options table_a7 &lt;- tables_a14 %&gt;% filter(sample_type == &quot;Blank&quot;) %&gt;% group_by(reagent_lot) %&gt;% summarize(M_B = round(mean(value), 2), SD_B = round(sd(value), 2), c_p = c_p, .groups = &quot;drop&quot;) %&gt;% mutate(LoB = round(M_B + c_p * SD_B, 1)) # Row 1 of this table doesn&#39;t allign with the document table_a7 ## # A tibble: 2 x 5 ## reagent_lot M_B SD_B c_p LoB ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Lot 1 3.19 3.4 1.65 8.8 ## 2 Lot 2 3.9 2.85 1.65 8.6 limits_parametric &lt;- table_a6 %&gt;% group_by(reagent_lot) %&gt;% summarize(SD_L = sqrt(sum((n - 1) * SD^2) / sum(n-1)), .groups = &quot;drop&quot;) %&gt;% right_join(table_a7, by = &quot;reagent_lot&quot;) %&gt;% mutate(LoD = round(LoB + c_p * SD_L, 1)) limits_parametric ## # A tibble: 2 x 7 ## reagent_lot SD_L M_B SD_B c_p LoB LoD ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Lot 1 3.11 3.19 3.4 1.65 8.8 13.9 ## 2 Lot 2 2.69 3.9 2.85 1.65 8.6 13 stopifnot( near( limits_parametric$LoB, c(8.8, 8.6) )) stopifnot( near( limits_parametric$LoD, c(13.9, 13.0) # Values according to my math # c(13.9, 13.2) # Values according to document )) "]
]
